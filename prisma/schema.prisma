// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(uuid())
  email String @unique

  fastaFile FastaFile[]
  jobs Job[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model FastaFile {
  id      String @id @default(uuid())
  fileUrl String @map("file_url")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  sequence Sequence[]
  job      Job[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("fasta_files")
}

model Job {
  id String @id @default(uuid())
  status JobStatus
  model Models

  fastaFile   FastaFile     @relation(fields: [fastaFileId], references: [id])
  fastaFileId String        @map("fasta_file_id")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  mlJobs MlJob[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("jobs")
}

model Sequence {
  id           String @id @default(uuid())
  name String
  content     String

  fastaFile   FastaFile @relation(fields: [fastaFileId], references: [id])
  fastaFileId String    @map("fasta_file_id")

  mlJobs MlJob[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("sequences")
}

model MlJob {
  id     String            @id @default(uuid())
  status MlJobStatus 
  result String?

  sequence   Sequence @relation(fields: [sequenceId], references: [id])
  sequenceId String   @map("sequence_id")

  job   Job    @relation(fields: [jobId], references: [id])
  jobId String @map("job_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("ml_jobs")
}

enum JobStatus {
  PROCESSING
  SUCCESS
  FAIL
}

enum MlJobStatus {
  PROCESSING
  SUCCESS
  FAIL
}

enum Models {
  DS_DSSP
  AS_DSSP
  DeepSplicer
  SpliceAI
}
